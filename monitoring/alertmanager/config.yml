global:
  resolve_timeout: 5m
  # SMTP configuration for email alerts (optional)
  # smtp_smarthost: 'smtp.gmail.com:587'
  # smtp_from: 'alerts@triterm.com'
  # smtp_auth_username: 'your-email@gmail.com'
  # smtp_auth_password: 'your-app-password'

# Alert routing
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'

  routes:
    # Critical alerts
    - match:
        severity: critical
      receiver: 'critical'
      continue: true

    # Warning alerts
    - match:
        severity: warning
      receiver: 'warning'

# Receivers
receivers:
  - name: 'default'
    # Default receiver - logs to console
    webhook_configs:
      - url: 'http://localhost:9093/api/v1/alerts'
        send_resolved: true

  - name: 'critical'
    # Email alerts for critical issues (uncomment and configure)
    # email_configs:
    #   - to: 'admin@triterm.com'
    #     subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
    #     html: |
    #       <h2>Critical Alert</h2>
    #       <p><b>Alert:</b> {{ .GroupLabels.alertname }}</p>
    #       <p><b>Severity:</b> {{ .CommonLabels.severity }}</p>
    #       <p><b>Summary:</b> {{ .CommonAnnotations.summary }}</p>
    #       <p><b>Description:</b> {{ .CommonAnnotations.description }}</p>

    # Slack alerts (uncomment and configure)
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#alerts'
    #     title: '[CRITICAL] {{ .GroupLabels.alertname }}'
    #     text: '{{ .CommonAnnotations.description }}'
    #     send_resolved: true

    # PagerDuty (uncomment and configure)
    # pagerduty_configs:
    #   - service_key: 'YOUR_PAGERDUTY_SERVICE_KEY'

  - name: 'warning'
    # Email alerts for warnings (uncomment and configure)
    # email_configs:
    #   - to: 'team@triterm.com'
    #     subject: '[WARNING] {{ .GroupLabels.alertname }}'

    # Slack alerts (uncomment and configure)
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#monitoring'
    #     title: '[WARNING] {{ .GroupLabels.alertname }}'
    #     text: '{{ .CommonAnnotations.description }}'

# Inhibition rules - prevent alert spam
inhibit_rules:
  # Inhibit warning if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'instance']

  # Inhibit all alerts if service is down
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: '.*'
    equal: ['instance']
