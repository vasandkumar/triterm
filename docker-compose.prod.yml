version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: triterm-db-prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - triterm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend Server
  server:
    image: ${SERVER_IMAGE:-ghcr.io/vasandkumar/triterm-server:latest}
    container_name: triterm-server-prod
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REQUIRE_AUTH: ${REQUIRE_AUTH:-true}
      AUTH_TOKEN: ${AUTH_TOKEN}
      MAX_TERMINALS: ${MAX_TERMINALS:-10}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60000}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      # Session
      SESSION_SECRET: ${SESSION_SECRET}
      SESSION_MAX_AGE: ${SESSION_MAX_AGE:-86400000}
    volumes:
      - server_logs:/app/server/logs
      - server_recordings:/app/server/recordings
    networks:
      - triterm-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Frontend Client
  client:
    image: ${CLIENT_IMAGE:-ghcr.io/vasandkumar/triterm-client:latest}
    container_name: triterm-client-prod
    restart: always
    depends_on:
      server:
        condition: service_healthy
    ports:
      - "${CLIENT_PORT:-80}:80"
      - "${CLIENT_PORT_SSL:-443}:443"
    networks:
      - triterm-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Database Backup Service (runs daily at 2 AM)
  db-backup:
    image: postgres:16-alpine
    container_name: triterm-backup
    restart: unless-stopped
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS:-7}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - triterm-network
    command: >
      sh -c "
      while true; do
        sleep 86400;
        PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -h db -U $$POSTGRES_USER $$POSTGRES_DB > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql &&
        find /backups -name 'backup_*.sql' -mtime +$$BACKUP_RETENTION_DAYS -delete;
      done
      "
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data:
    driver: local
  server_logs:
    driver: local
  server_recordings:
    driver: local

networks:
  triterm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
